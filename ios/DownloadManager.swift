import Foundation

class DownloadManager: NSObject, URLSessionDownloadDelegate, URLSessionTaskDelegate {
    static let shared = DownloadManager()
    
    private var session: URLSession!
    private var activeDownloads: [URL: URLSessionDownloadTask] = [:]
    
    override init() {
        super.init()
        let configuration = URLSessionConfiguration.background(withIdentifier: "com.audiobooks.download")
        configuration.sessionSendsLaunchEvents = true
        configuration.waitsForConnectivity = true
        session = URLSession(configuration: configuration, delegate: self, delegateQueue: nil)
    }
    
    // –ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
    func startDownload(from url: URL) {
        if activeDownloads[url] != nil {
            return // —É–∂–µ –∫–∞—á–∞–µ—Ç—Å—è
        }
        let task = session.downloadTask(with: url)
        activeDownloads[url] = task
        task.resume()
    }
    
    // –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
    func cancelDownload(for url: URL) {
        activeDownloads[url]?.cancel()
        activeDownloads.removeValue(forKey: url)
    }
    
    // MARK: - URLSessionDownloadDelegate
    
    func urlSession(_ session: URLSession,
                    downloadTask: URLSessionDownloadTask,
                    didFinishDownloadingTo location: URL) {
        print("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: \(location)")
        if let originalURL = downloadTask.originalRequest?.url {
            activeDownloads.removeValue(forKey: originalURL)
        }
        // TODO: –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–∏ –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    }
    
    // MARK: - URLSessionTaskDelegate
    
    func urlSession(_ session: URLSession,
                    task: URLSessionTask,
                    didCompleteWithError error: Error?) {
        if let error = error {
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: \(error.localizedDescription)")
        } else {
            print("‚ÑπÔ∏è –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        }
        if let url = task.originalRequest?.url {
            activeDownloads.removeValue(forKey: url)
        }
    }
    
    // MARK: - Background events
    
    func urlSessionDidFinishEvents(forBackgroundURLSession session: URLSession) {
        print("üåô –í—Å–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è background session –∑–∞–≤–µ—Ä—à–µ–Ω—ã")
        // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –¥–µ—Ä–Ω—É—Ç—å completionHandler –∏–∑ AppDelegate
    }
}
